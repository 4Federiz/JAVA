/*
    Given an unsorted array of size n. Array elements are in range from 1 to n. One number 'A' from set {1, 2, …n} is missing and one number 'B' occurs twice in array. Find these two numbers.
    Note: If you find multiple answers then print the Smallest number found.

    Input:

    The first line of input contains an integer T denoting the number of test cases. The description of T test cases follows.
    The first line of each test case contains a single integer N denoting the size of array.
    The second line contains N space-separated integers A1, A2, ..., AN denoting the elements of the array.


    Output:

    Print B, the repeating number followed by A which is missing in a single line.


    Constraints:

    1 ≤ T ≤ 40
    1 ≤ N ≤ 100
    1 ≤ A[i] ≤ N


    Example:

    Input
    2
    2
    2 2
    3 
    1 3 3
    Output
    2 1
    3 2
*/
package roadToPro;
import java.util.ArrayList;
import java.util.Collections;

public class ArrayFindMissingAndRepeated{
    public static void main(String[] args){
//        int T;  //Number of test cases.
        int N = 0;  //Size of the array.
        
        N = 2;
        ArrayList<Integer> A = new ArrayList(N);
        A.add(2);
        A.add(2);
        
        N = 3;
        ArrayList<Integer> Ai = new ArrayList(N);
        Ai.add(1);
        Ai.add(3);
        Ai.add(3);
        
        System.out.println(findMissingAndRepeated(A));
        System.out.println(findMissingAndRepeated(Ai));
    }

    private static String findMissingAndRepeated(ArrayList<Integer> A){
        String str = "";
        
        /**
         * Sorting of the arraylist.
        */
        Collections.sort(A);
        
        for(int i = 1; i < A.size(); i++){
            if(A.get(i) == A.get(i - 1)){
                str += A.get(i) + " " + i;
            }
        }
        
        return str;
    }
}
